{"Timestamp":"2023-07-01T00:05:12.3265978+03:00","Level":"Warning","MessageTemplate":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","Properties":{"EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"f5439c16-c8ae-4dd6-871c-435ee4b78936","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPLLMTUS1L:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPLLMTUS1L"}}
{"Timestamp":"2023-07-01T00:05:17.4933145+03:00","Level":"Error","MessageTemplate":"Aynı id'ye ait kayıt bulunmaktadır !","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"f5439c16-c8ae-4dd6-871c-435ee4b78936","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPLLMTUS1L:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPLLMTUS1L"}}
{"Timestamp":"2023-07-01T00:07:56.4050957+03:00","Level":"Warning","MessageTemplate":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","Properties":{"EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"523eea7a-fafb-441c-935c-7f9e927ff318","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPLNI1ILVM:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPLNI1ILVM"}}
{"Timestamp":"2023-07-01T00:08:01.9815284+03:00","Level":"Error","MessageTemplate":"Aynı id'ye ait kayıt bulunmaktadır !","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"523eea7a-fafb-441c-935c-7f9e927ff318","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPLNI1ILVM:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPLNI1ILVM"}}
{"Timestamp":"2023-07-01T03:08:31.9535474+03:00","Level":"Information","MessageTemplate":"All records are listed.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"0d5de348-c8d0-41f2-b9f9-5dbaf1edc96b","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPOT512F2J:00000004","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPOT512F2J"}}
{"Timestamp":"2023-07-01T03:30:56.4337754+03:00","Level":"Warning","MessageTemplate":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","Properties":{"EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}}
{"Timestamp":"2023-07-01T03:31:35.4554878+03:00","Level":"Information","MessageTemplate":"All records are listed.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"5ce6bbe7-c9de-499d-8737-1e82654e2a88","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPP9RQEHI1:00000004","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPP9RQEHI1"}}
{"Timestamp":"2023-07-01T03:32:44.7528041+03:00","Level":"Information","MessageTemplate":"All records are listed.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"5ce6bbe7-c9de-499d-8737-1e82654e2a88","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPP9RQEHI1:00000005","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPP9RQEHI1"}}
{"Timestamp":"2023-07-01T03:33:00.6015969+03:00","Level":"Error","MessageTemplate":"An error occurred using the connection to database '{database}' on server '{server}'.","Properties":{"database":"SovosDb","server":"(localdb)\\MSSQLLocalDB","EventId":{"Id":20004,"Name":"Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Connection","ActionId":"5ce6bbe7-c9de-499d-8737-1e82654e2a88","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPP9RQEHI1:00000005","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPP9RQEHI1"}}
{"Timestamp":"2023-07-01T03:33:00.6534487+03:00","Level":"Error","MessageTemplate":"An exception occurred while iterating over the results of a query for context type '{contextType}'.{newline}{error}","Exception":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"SovosDb\" requested by the login. The login failed.\r\nLogin failed for user 'SOFTDMN\\gurkan.kir'.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\nClientConnectionId:aef40d9a-d2a3-422f-8b23-27e0d3e4b422\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()","Properties":{"contextType":"SovosWebApi.Repository.RepositoryContext.Context","newline":"\r\n","error":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"SovosDb\" requested by the login. The login failed.\r\nLogin failed for user 'SOFTDMN\\gurkan.kir'.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\nClientConnectionId:aef40d9a-d2a3-422f-8b23-27e0d3e4b422\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5ce6bbe7-c9de-499d-8737-1e82654e2a88","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPP9RQEHI1:00000005","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPP9RQEHI1"}}
{"Timestamp":"2023-07-01T03:33:13.1442536+03:00","Level":"Error","MessageTemplate":"An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"5ce6bbe7-c9de-499d-8737-1e82654e2a88","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPP9RQEHI1:00000005","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPP9RQEHI1"}}
{"Timestamp":"2023-07-01T03:34:10.0178268+03:00","Level":"Warning","MessageTemplate":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","Properties":{"EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}}
{"Timestamp":"2023-07-01T03:34:54.1061418+03:00","Level":"Information","MessageTemplate":"All records are listed.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"c7d26b9e-a770-435c-80fc-be9d0890f113","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000004","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.6449655+03:00","Level":"Information","MessageTemplate":"Default Quartz.NET properties loaded from embedded resource file","Properties":{"SourceContext":"Quartz.Impl.StdSchedulerFactory","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7032525+03:00","Level":"Information","MessageTemplate":"Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl","Properties":{"SourceContext":"Quartz.Core.SchedulerSignalerImpl","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7040446+03:00","Level":"Information","MessageTemplate":"Quartz Scheduler created","Properties":{"SourceContext":"Quartz.Core.QuartzScheduler","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7054834+03:00","Level":"Information","MessageTemplate":"RAMJobStore initialized.","Properties":{"SourceContext":"Quartz.Simpl.RAMJobStore","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7072002+03:00","Level":"Information","MessageTemplate":"Quartz Scheduler 3.6.2.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized","Properties":{"SourceContext":"Quartz.Impl.StdSchedulerFactory","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7084781+03:00","Level":"Information","MessageTemplate":"Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10","Properties":{"SourceContext":"Quartz.Impl.StdSchedulerFactory","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7099968+03:00","Level":"Information","MessageTemplate":"Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False","Properties":{"SourceContext":"Quartz.Impl.StdSchedulerFactory","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7217107+03:00","Level":"Information","MessageTemplate":"Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.","Properties":{"SourceContext":"Quartz.Core.QuartzScheduler","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:35:31.7411686+03:00","Level":"Information","MessageTemplate":" A new record with id:string has been created.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"a79bc8c1-2ea3-48af-99de-bf776686d7a1","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.Create (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000005","RequestPath":"/InvoiceHeader/Create","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:36:49.8884993+03:00","Level":"Information","MessageTemplate":"All records are listed.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"c7d26b9e-a770-435c-80fc-be9d0890f113","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000006","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:36:59.9199241+03:00","Level":"Error","MessageTemplate":"An error occurred using the connection to database '{database}' on server '{server}'.","Properties":{"database":"SovosDb","server":"(localdb)\\MSSQLLocalDB","EventId":{"Id":20004,"Name":"Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Connection","ActionId":"c7d26b9e-a770-435c-80fc-be9d0890f113","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000006","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:36:59.9721650+03:00","Level":"Error","MessageTemplate":"An exception occurred while iterating over the results of a query for context type '{contextType}'.{newline}{error}","Exception":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"SovosDb\" requested by the login. The login failed.\r\nLogin failed for user 'SOFTDMN\\gurkan.kir'.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\nClientConnectionId:a7115ead-6139-400d-baf0-423e3c7fe1e8\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()","Properties":{"contextType":"SovosWebApi.Repository.RepositoryContext.Context","newline":"\r\n","error":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"SovosDb\" requested by the login. The login failed.\r\nLogin failed for user 'SOFTDMN\\gurkan.kir'.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\nClientConnectionId:a7115ead-6139-400d-baf0-423e3c7fe1e8\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"c7d26b9e-a770-435c-80fc-be9d0890f113","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000006","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:37:00.0159171+03:00","Level":"Error","MessageTemplate":"An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.","Properties":{"SourceContext":"SovosWebApi.Controllers.InvoiceHeaderController","ActionId":"c7d26b9e-a770-435c-80fc-be9d0890f113","ActionName":"SovosWebApi.Controllers.InvoiceHeaderController.GetAll (SovosWebApi)","RequestId":"0HMRPPBS0RUL3:00000006","RequestPath":"/InvoiceHeader/GetAll","ConnectionId":"0HMRPPBS0RUL3"}}
{"Timestamp":"2023-07-01T03:40:02.3270234+03:00","Level":"Warning","MessageTemplate":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","Properties":{"EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}}
